I - Plateau

On a un carré avec un margin de 30px par exemple.

Largeur max au milieu: 13
Longueur max au milieu: 13


7
10  (serpent de mer: indice 0)
11  (serpent de mer: indice 10)
10  (id 3: gauche et haut, id: 4: haut, id 5: haut, id 6: haut droite)
11  (id 3: gauche (haut gauche), id 7: (haut droite) droite, 
12  (id 2: (bas gauche) gauche haut, id 3: (haut gauche), id 8: (haut droite), id 2: (bas droite) droite haut) 

11  (serpent de mer: indice 5) (id 2: gauche, id 8: droite)

12  (id 2: (haut gauche) gauche bas, id 3: (bas gauche), id 8: (bas droite), id 2: (haut droite) droite bas)
11  (id 3: gauche (bas gauche), id 7: (bas droite) droite, 
10  (id 3: gauche et bas, id: 4: bas, id 5: bas, id 6: bas droite)
11  (serpent de mer: indice 0)
10  (serpent de mer: indice 10)
7


II - Les classes

- Créer une class position qui va garder les coordonnées de
chaque élément sur le plateau

class Position {
    int x;
    int y;

    public Position(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public void setX(int x) {
        this.x = x;
    }

    public void setY(int y) {
        this.y = y;
    }

    public int getX() {
        return this.x;
    }

    public int getY() {
        return this.y;
    }
}

- Créer les tuiles de l’île:

Commençant par les faces cachées

class FaceCachée extends Position {
    String typeTuile;
    String typeFaceCachée;

    public FaceCachée(int x, int y, String typeTuile, String typeFaceCachée) {
        super(x, y);
        this.typeTuile = typeTuile;
        this.typeFaceCachée = typeFaceCachée
    }

    public static void bonus() {
    }

    public static void évènement() {
    }

    @Override
    public void setX(int x) {
    }
    
    @Override
    public void setY(int y) {
    }
}

class Tuile extends Position {
    int niveauEngloutissement;
    FaceCachée faceCachée;

    public Tuile(int x, int y, int niveauEngloutissement, FaceCachée faceCachée) {
        super(x, y);
        this.niveauEngloutissement = niveauEngloutissement;
        this.faceCachée = faceCachée;
    }

    public int getNiveauEngloutissement() {
        return niveauEngloutissement;
    }

    public Tuile getTuile() {
        return this;
    }
    
  
    public FaceCachée getFaceCachée() {
        return faceCachée;
    }
    
     //On rééecris la fonction qui change les
      coordonnées en une fonction qui ne fais rien car
      cet élément ne se déplace pas.

    @Override
    public void setX(int x) {
	
    }

    @Override
    public void setY(int y) {
    }

}

class Plage extends Tuile {
    public Plage(int x, int y, FaceCachée faceCachée) {
        super(x, y, 1, faceCachée);
    }
}

class Forêt extends Tuile {
    public Forêt(int x, int y, FaceCachée faceCachée) {
        super(x, y, 2, faceCachée);
    }
}

class Montagne extends Tuile {
    public Montagne(int x, int y, FaceCachée faceCachée) {
        super(x, y, 3, faceCachée);
    }
}

- Créer le dé monstre:
Avec équiprobabilité donc 1 chance sur 6 de tomber
sur n’importe qu’elle face
deux faces opposées serpent de mer
deux faces opposées baleine
deux faces opposées requin

- Créer les pions monstres

class Monstre extends Position {
    String nomMonstre;

    public Monstre(int x, int y, String nomMonstre) {
        super(x, y);
        this.nomMonstre = nomMonstre;
    }

    public String getNomMonstre() {
        return nomMonstre;
    }
}

class SerpentDeMer extends Monstre {
    public SerpentDeMer(int x, int y) {
        super(x, y, "Serpent de mer");
    }

    public void devorerExplorateursEtBateaux() {

    }
}

class Requin extends Monstre {
    public Requin(int x, int y) {
        super(x, y, "Requin");
    }

    public void devorerExplorateurs() {

    }
}

class Baleine extends Monstre {
    public Baleine(int x, int y) {
        super(x, y, "Baleine");
    }

    public void coulerBateau() {

    }
}

- Créer les 12 pions bateaux

class Bateau extends Position {
    int capaciteBateau = 3;

    public Bateau(int x, int y) {
        super(x, y);
    }

    public int getCapaciteBateau() {
        return capaciteBateau;
    }

    public void diminuerCapaciteBateau() {
        capaciteBateau--;
    }
}

- Créer les 40 pions explorateurs

class Explorateur extends Position {
    int pointsDeTresor;

    public Explorateur(int x, int y, int pointsDeTresor) {
        super(x, y);
        this.pointsDeTresor = pointsDeTresor;
    }

    public int getPointsDeTresor() {
        return pointsDeTresor;
    }
}

class Explorateurs extends HashMap<String, Explorateur> {
    
}

public class TheIsland{
    
}

